/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /list/chromosomes
 */
export interface ChromosomesRequestBuilder extends BaseRequestBuilder<ChromosomesRequestBuilder> {
    /**
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ArrayBuffer>}
     */
     get(requestConfiguration?: RequestConfiguration<ChromosomesRequestBuilderGetQueryParameters> | undefined) : Promise<ArrayBuffer | undefined>;
    /**
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ChromosomesRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
export interface ChromosomesRequestBuilderGetQueryParameters {
    genome?: string;
    hubUrl?: string;
    track?: string;
}
/**
 * Uri template for the request builder.
 */
export const ChromosomesRequestBuilderUriTemplate = "{+baseurl}/list/chromosomes?genome={genome}{&hubUrl*,track*}";
/**
 * Metadata for all the requests in the request builder.
 */
export const ChromosomesRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: ChromosomesRequestBuilderUriTemplate,
        adapterMethodName: "sendPrimitive",
        responseBodyFactory:  "ArrayBuffer",
    },
};
/* tslint:enable */
/* eslint-enable */
